url to follow:
https://www.digitalocean.com/community/tutorials/how-to-deploy-a-flask-application-on-an-ubuntu-vps

step 1:
sudo apt-get update
sudo apt-get install apache2
apache2 -version
sudo ufw app list
sudo ufw allow 'Apache'
sudo systemctl status apache2
sudo apt-get install libapache2-mod-wsgi-py3 python-dev
sudo a2enmod wsgi

files:
/var/www/html/webApp/
                   myapp.py
                   templates
                   static
                   views

step 2:
sudo nano /etc/apache2/sites-available/000-default.conf

<VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com
        ServerName 10.30.57.75
        ServerAdmin webmaster@localhost
        #DocumentRoot /var/www/html
        WSGIScriptAlias / /var/www/html/jenkinsproject/jenkinsproject.wsgi
             <Directory /var/www/html/jenkinsproject>
                        Order allow,deny
                        Allow from all
                </Directory>
        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf
</VirtualHost>



step 3:

sudo nano /var/www/html/jenkinsproject/jenkinsproject.wsgi

#!/usr/bin/python
import sys
import logging
logging.basicConfig(stream=sys.stderr)
sys.path.insert(0,"/var/www/html/jenkinsproject/")

from app import app as application
application.secret_key = ''

step 4:
sudo pip install flask
sudo pip install jenkinsapi
sudo pip install python-jenkins
sudo pip install requests
sudo pip install pytz



step 5

sudo systemctl start mongod
sudo service apache2 restart
systemctl status apache2.service
sudo pip install pymongo
sudo nano /var/log/apache2/error.log 
